/* empty css                    *//* empty css                *//* empty css                  *//* empty css                   */import{d as x,r,e as h,y as w,w as d,g as l,u as n,i as m,a as o,z,A as B,q as k,p as g,f as V,_ as $,c as I,J as S,K as R}from"./index-CtLRTTBE.js";const b=e=>(g("data-v-fd72967d"),e=e(),V(),e),E=b(()=>o("div",null,"比较常见的设置方式就是设置像素，像素就代表了每个角对应的圆的半径，我个人理解就像是先贴合每个角切出对应圆角大小的正方形，然后以对角为圆心做一个半圆，使用这个半圆去切容器的角，得到的圆弧就是圆角。也可以设置百分比，设置一个数就代表水平垂直的百分比都是一个值。设置百分比为 10% / 20% 就代表，四个圆角的水平半径为长度的10%，四个圆角的垂直半径为长度的20%",-1)),U=b(()=>o("span",{class:"label"}," border-top-left-radius: ",-1)),C=b(()=>o("span",{class:"label"}," border-top-right-radius: ",-1)),y=b(()=>o("span",{class:"label"}," border-bottom-left-radius: ",-1)),N=b(()=>o("span",{class:"label"}," border-bottom-right-radius: ",-1)),T=x({__name:"BorderRadius",setup(e){const s=r(50),i=r(50),t=r(50),u=r(50);return(v,a)=>{const _=B,p=k;return h(),w(p,{class:"box",direction:"vertical",size:"large",alignment:"flex-start"},{default:d(()=>[E,l(p,null,{default:d(()=>[U,l(_,{modelValue:n(s),"onUpdate:modelValue":a[0]||(a[0]=c=>m(s)?s.value=c:null),min:0,max:100,size:"large",class:"silder","show-input":""},null,8,["modelValue"])]),_:1}),l(p,null,{default:d(()=>[C,l(_,{modelValue:n(i),"onUpdate:modelValue":a[1]||(a[1]=c=>m(i)?i.value=c:null),min:0,max:100,size:"large",class:"silder","show-input":""},null,8,["modelValue"])]),_:1}),l(p,null,{default:d(()=>[y,l(_,{modelValue:n(t),"onUpdate:modelValue":a[2]||(a[2]=c=>m(t)?t.value=c:null),min:0,max:100,size:"large",class:"silder","show-input":""},null,8,["modelValue"])]),_:1}),l(p,null,{default:d(()=>[N,l(_,{modelValue:n(u),"onUpdate:modelValue":a[3]||(a[3]=c=>m(u)?u.value=c:null),min:0,max:100,size:"large",class:"silder","show-input":""},null,8,["modelValue"])]),_:1}),o("div",{class:"demo",style:z({borderRadius:`${n(s)}px ${n(i)}px ${n(u)}px ${n(t)}px`})},null,4)]),_:1})}}}),L=$(T,[["__scopeId","data-v-fd72967d"]]),f=e=>(g("data-v-90f449db"),e=e(),V(),e),q=f(()=>o("div",null,"背景的设置主要就是可以使用纯色、图片、渐变，这里主要演示渐变，图片的话之前有很长一段时间流行过雪碧图，也就是一张图上放着很多图标，然后通过背景图片，修改它的position去更换图标，不过自从字体图标流行之后便用的比较少了，svg图还是更好用一点。图片的背景尺寸常用的就是cover和contain，区别就在于前者通常是以放大图片为主，使得图片的宽高都能贴合到容器上，超出部分不展示，后者则往往是缩小图片，使得图片能完整展示，容器上下或者左右会有空余空间。不过相同点就是两者都会保留图片的宽高比。渐变的话主要是线性渐变和径向渐变，通俗一点理解就是前者是在一条线上去变化，后者就是一个点散发到周边，有点像点光源的感觉。",-1)),A=f(()=>o("div",{class:"box box-1"},null,-1)),J=f(()=>o("div",{class:"box box-2"},null,-1)),K=f(()=>o("div",null,"有一次无意中发现border其实也可以使用渐变，所以也弄一个效果看看，不过就是border使用渐变之后border-radius无效了",-1)),P=f(()=>o("div",{class:"box box-3"},null,-1)),j=x({__name:"Background",setup(e){return r(50),r(50),r(50),r(50),(s,i)=>{const t=k;return h(),w(t,{class:"container",direction:"vertical",size:"large",alignment:"flex-start"},{default:d(()=>[q,A,J,K,P]),_:1})}}}),D=$(j,[["__scopeId","data-v-90f449db"]]),F=e=>(g("data-v-5b27fc63"),e=e(),V(),e),G=F(()=>o("div",null,"css样式相关",-1)),H=x({__name:"index",setup(e){const s=r("border-radius"),i=t=>{s.value=t.props.name};return(t,u)=>{const v=R,a=S;return h(),I("main",null,[G,l(a,{modelValue:n(s),"onUpdate:modelValue":u[0]||(u[0]=_=>m(s)?s.value=_:null),class:"demo-tabs",onTabClick:i},{default:d(()=>[l(v,{label:"圆角",name:"border-radius"},{default:d(()=>[l(L)]),_:1}),l(v,{label:"背景",name:"background"},{default:d(()=>[l(D)]),_:1})]),_:1},8,["modelValue"])])}}}),Y=$(H,[["__scopeId","data-v-5b27fc63"]]);export{Y as default};
